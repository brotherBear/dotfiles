" {{{************************ General settings *****************************
  "         These are generally valid for both vim and neovim
  "
  " Modifications to behaviour
    set autowrite           " Automatically :write before running commands
    set mouse=a             " enable mouse for selection and resize windows
    set termguicolors       " enable true colors
    set laststatus=2        " always display the status line
    set incsearch           " do incremental searches
    set hlsearch            " highlight searches
    set tabstop=2           " use spaces for tabs
    set shiftwidth=2        " Number of spaces for each step of indentation
    set conceallevel=0      " Make sure we don't hide anything
    set shiftround          " Round indent to multiple of "shiftwidth"
    set relativenumber      " Enable relative line numbers
    set number              " Show the actual line number for current line
    set showmatch           " show the matching part for any parentheses
    set splitbelow
    set splitright
    set encoding=utf-8      " Standard file encoding
" }}}

if !has('gui_running')
  " Enable 256 color mode (for lightline)
  set t_Co=256
endif

" {{{************************ Leader key mapping ***************************
  " I am using a Mac with norwegian keyboard, so I need the leader key to be
  " more sensible.
    let g:mapleader=","
  
  " alias for leader key
    nmap <space> ,
    xmap <space> ,
" }}}

" Set some useful variables
"
let $RTP=split(&runtimepath, ',')[0]
let $RC="$HOME/.vim/vimrc"
let $NRC="$HOME/.config/nvim/init.vim"

set path=.,**

filetype plugin indent on
syntax on

" {{{************************ Plug package manager *************************
  if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  endif

  " *********** Setup vim-plug package manager here *******************{{{
  call plug#begin('~/.local/share/nvim/plugged')
    Plug 'airblade/vim-gitgutter'
    Plug 'chriskempson/base16-vim'
    " Plug 'christoomey/vim-tmux-navigator'
    Plug 'deoplete-plugins/deoplete-jedi'
    Plug 'davidhalter/jedi-vim'
    Plug 'guns/vim-clojure-static'
    Plug 'guns/vim-clojure-highlight'
    Plug 'itchyny/lightline.vim'
    Plug 'jnurmine/Zenburn'
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'}
    Plug 'junegunn/fzf.vim'
    Plug 'junegunn/vim-plug'
    Plug 'kassio/neoterm'
    Plug 'kien/rainbow_parentheses.vim'
    Plug 'nvie/vim-flake8'
    Plug 'psf/black'
    Plug 'plasticboy/vim-markdown'
    Plug 'sbdchd/neoformat'
    Plug 'scrooloose/nerdtree'
    Plug 'scrooloose/nerdcommenter'
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
    " Plug 'Shougo/deoplete-clangx'
    Plug 'stephpy/vim-yaml'
    Plug 'tmhedberg/SimpylFold'
    Plug 'tpope/vim-fireplace'
    Plug 'tpope/vim-dispatch'
    Plug 'tpope/vim-salve'
    Plug 'tpope/vim-sleuth'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-fugitive'
    Plug 'vim-scripts/indentpython.vim'
    Plug 'vim-syntastic/syntastic'
    Plug 'w0rp/ale'
    " Plug 'ycm-core/YouCompleteMe'
    Plug 'Yggdroot/indentLine'
  call plug#end()
" }}}

" Automatically load the Zenburn color scheme
  colors zenburn

" Configure SimpylFold
  let g:SimpylFold_docstring_preview=1

" Enable folding
  set foldmethod=indent
  set foldlevel=99

" *************** Python3 ************
  let g:python3_host_prog='/opt/homebrew/bin/python3'
  let python_highlight_all=1

" ***************** IndentLine **************
"
  let g:indentLine_char_list = ['|', '¦', '┆', '┊']


" ******************** Lightline ***************************************
  let g:lightline = {
        \ 'active': {
        \     'left': [['mode', 'paste'],
        \              ['gitbranc', 'readonly', 'filename', 'modified']]
        \ },
        \ 'component_function': {
        \   'gitbranch': 'FugitiveHead'
        \ },
        \ }

" ******************** ALE ****************************
  let g:ale_linters = { 'c': ['gcc'], 'cpp': ['g++'], 'python': ['flake8']}
  let g:ale_python_flake8_options = '--ignore='
  let g:ale_sign_error='ER'
  let g:ale_sign_warning='WR'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
  let g:ale_fixers = {}
  let g:ale_fixers.python = ['black']


" *************** Deoplete **************
  " call deoplete#enable()
  " let g:deoplete#enable_at_startup=1
  " let g:deoplete#omni_patterns = {}

" **************** Jedi *****************
  " disable autocompletion since we're using deoplete for that
  let g:jedi#completions_enabled=0
  " open the go-to function in split, not another buffer
  let g:jedi#use_splits_not_buffers="right"

" {{{ ************* Key Mappings ******************************
  " Simplify movement between screen splits
    nnoremap <C-J> <C-W><C-J>
    nnoremap <C-K> <C-W><C-K>
    nnoremap <C-L> <C-W><C-L>
    nnoremap <C-H> <C-W><C-H>

  " Enable folding with spacebar
    nnoremap <space> za

  " replace word under cursor, globally, with confirmation
    nnoremap <Leader>k :%s/\<<C-r><C-w>\>//gc<Left><Left><Left>
    vnoremap <Leader>k y :%s/<C-r>"//gc<Left><Left><Left>

  " something something terminal
    tnoremap <Esc> <C-\><C-n>

  " Snippets
    nnoremap <leader>note :-1read $HOME/.vim/snippets/.skeleton.notes.md<CR>

  " formatting
    nnoremap <leader>f Neoformat

  " Vimdiff
    nnoremap <C-9> <C-]>

" }}}

" {{{ *********************** Autocommands ************************

  autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
  autocmd BufWritePre *.py execute ':Black'

" }}}
